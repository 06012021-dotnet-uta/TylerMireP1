@model Domain.Customer

@{
    ViewData["Title"] = "Details";
    Dictionary<Guid, Location> locationInfoDict = (Dictionary<Guid, Location>)ViewBag.LocationInfoDict;
    List<SelectListItem> selectListItems = new List<SelectListItem>();
    List<OrderItem> orderItems = (List<OrderItem>)ViewBag.OrderItems;

    foreach(var key in locationInfoDict.Keys)
    {
        selectListItems.Add(new SelectListItem()
        {
            Text = locationInfoDict[key].Name,
            Value = key.ToString()
        });
    }
}

<div>
    <h4>Customer</h4>
    <hr />
    @using (Html.BeginForm("UpdateDefaultLocation", "Customers", FormMethod.Post, Model))
    {
        <input type="hidden" asp-for="@Model.Id" value="@Model.Id"/>
        @Html.DropDownListFor(model => model.DefaultLocationId, selectListItems, new { @class = "form-control" })
        <input type="submit" class="btn-primary float-right" value="Update" />
        <br />
    }
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressStreet)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressStreet)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressCity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressCity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AddressState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AddressState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AccountCreationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AccountCreationDate)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<div>
    <h4>Order History</h4>
    @if (orderItems.Count > 0)
    {
<table>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => orderItems[0].OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => orderItems[0].ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => orderItems[0].TotalItems)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in orderItems)
        {
        <tr>
            <td>
                @Html.DisplayFor(model => orderItems[0].OrderId)
            </td>
            <td>
                @Html.DisplayFor(model => orderItems[0].ProductId)
            </td>
            <td>
                @Html.DisplayFor(model => orderItems[0].TotalItems)
            </td>
        </tr>
        }
    </tbody>
    </table>
    }
</div>
